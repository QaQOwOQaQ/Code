C++ 语言的核心优势就是**便于软件的重用**
C++ 中有两方面体现重用
1.面向对象的思想：继承和多态，标准类库
2.泛型程序设计的思想：模板机制作和标准模板库STL
简单来说就是模板的程序设计法

**标准模板库**就是一些常用**数据结构和算法的模板的集合**

STL中的基本概念
容器：类模板
迭代器：指针
算法：函数模板
注意，简单的数组我们也认为是一种容器

容器：顺序容器，关联容器（排序容器、哈希容器）
顺序容器：vector,deque,list
  之所以被称为序列容器，是因为元素在容器中的位置同元素的值无关，
  即容器不是排序的。将元素插入容器时，指定在什么位置，元素就会位于什么位置。
排序容器：set,multiset,map,multimap 
  排序容器中的元素默认是由小到大排序好的，即便是插入元素，元素也会插入到适当位置。
  所以关联容器在查找时具有非常好的性能。
哈希容器：unordered_map,unordered_multimap,unordered_set,unordered_multimap
  C++ 11 新加入 4 种关联式容器
  和排序容器不同，哈希容器中的元素是未排序的，元素的位置由哈希函数确定。

容器适配器：stack,queue,priority_queue
  stack和queue其实是适配器,而不叫容器，因为是对容器的再封装  

容器适配器
概念
设计模式：设计模式是一套被反复使用的、多数人知晓的、经过分类编目的代码设计经验总结，    
         代表了最佳的实践，通常被有经验的面向对象的软件开发人员所采用，是
         软件开发人员在软件开发过程中面临的一般问题的解决方案，
         它主要优点有可重用代码、提高代码的可扩展性以及可维护性。
适配器：适配器是一种设计模式，该种模式是将一个类的接口转换成客户希望的另外一个接口；
        简单来说就是对于用户需要的接口，我们使用其他类来进行封装即可，不需要重新来实现用户所需接口，
        但是对于这个其他类也是有一定的要求的，只有满足所需的要求，才能成为被用来封装的类；
[容器适配器](https://blog.csdn.net/Jokersorry/article/details/115608719)

关联容器和顺序容器有着根本的不同：
  关联容器中的元素是按关键字来保存和访问的，支持高效的关键字查找与访问。
  与之相对，顺序容器中的元素是按它们在容器中的位置来顺序保存和访问的。
  并且，顺序容器中的元素的位置与元素加入容器的顺序有关，而关于容器则是与key有关