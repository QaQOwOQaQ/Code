# 函数模板
泛型程序设计：使用模板的程序设计就叫做泛型程序设计
模板：函数模板和类模板

模板格式:
template<class T, ....> //类型参数表,这里的class也可以替换为typename
T func(T args)  //形参表
{
    ...
}

模板的实例化：编译器由模板生成函数的过程。就是把模板里面的类型参数换成具体的类型得到一个函数
写了一条调用函数模板的语句之后，编译器根据调用语句的实参类型就会自动生成函数（模板的实例化）

不通过实参也可以实例化函数模板
格式：func_name<type>(args...)，其中type就是我们指定的类型

函数模板中可以不止一个类型参数
每个一个函数上面都要跟一句template<class T1 ...>

函数模板可以重载，只要他们的形参表或类型参数表不同即可

当有多个函数和函数模板名字相同时，调用顺序如下：
1.先找参数完全匹配的**普通函数**
2.先找参数完全匹配的**模板函数**
3.再找实参经过自动类型转换能够匹配的**普通函数**
4.报错
可以看出，模板函数进行匹配时，不进行类型自动转换